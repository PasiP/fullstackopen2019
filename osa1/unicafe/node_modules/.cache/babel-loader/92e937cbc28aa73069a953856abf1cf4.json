{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Pasi\\\\Desktop\\\\Full Stack -websovelluskehitys\\\\osa1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pasi\\\\Desktop\\\\Full Stack -websovelluskehitys\\\\osa1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => {\n  console.log(props);\n  const onClick = props.onClick,\n        text = props.text;\n  return React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, text);\n};\n\nconst Statistics = props => {\n  console.log('Statistics props value is', props);\n  const text = props.text,\n        num = props.num;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, text, \" \", num));\n};\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  let sum = good + neutral + bad;\n  {\n    /*\n    let avg = (good + (bad * -1)) / (good + neutral + bad)\n    let pos = good / (good + neutral + bad) * 100\n    */\n  }\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"give feedback\"), React.createElement(Button, {\n    onClick: () => setGood(good + 1),\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setNeutral(neutral + 1),\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setBad(bad + 1),\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"statistics\"), React.createElement(Statistics, {\n    text: \"good\",\n    num: good,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"neutral\",\n    num: neutral,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"bad\",\n    num: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Pasi/Desktop/Full Stack -websovelluskehitys/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","console","log","onClick","text","Statistics","num","App","good","setGood","neutral","setNeutral","bad","setBad","sum","render","document","getElementById"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AADwB,QAEhBG,OAFgB,GAEEH,KAFF,CAEhBG,OAFgB;AAAA,QAEPC,IAFO,GAEEJ,KAFF,CAEPI,IAFO;AAGxB,SACE;AAAQ,IAAA,OAAO,EAAED,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,IADH,CADF;AAKD,CARD;;AAUA,MAAMC,UAAU,GAAIL,KAAD,IAAW;AAC5BC,EAAAA,OAAO,CAACC,GAAR,CAAY,2BAAZ,EAAyCF,KAAzC;AAD4B,QAEpBI,IAFoB,GAENJ,KAFM,CAEpBI,IAFoB;AAAA,QAEdE,GAFc,GAENN,KAFM,CAEdM,GAFc;AAI5B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,IAAJ,OAAWE,GAAX,CADF,CADF;AAKD,CATD;;AAWA,MAAMC,GAAG,GAAG,MAAM;AAChB;AADgB,oBAEQV,QAAQ,CAAC,CAAD,CAFhB;AAAA;AAAA,QAETW,IAFS;AAAA,QAEHC,OAFG;;AAAA,qBAGcZ,QAAQ,CAAC,CAAD,CAHtB;AAAA;AAAA,QAGTa,OAHS;AAAA,QAGAC,UAHA;;AAAA,qBAIMd,QAAQ,CAAC,CAAD,CAJd;AAAA;AAAA,QAITe,GAJS;AAAA,QAIJC,MAJI;;AAKhB,MAAIC,GAAG,GAAGN,IAAI,GAAGE,OAAP,GAAiBE,GAA3B;AACA;AAAC;;;;AAGG;AAEJ,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADF,EAEE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMH,OAAO,CAACD,IAAI,GAAG,CAAR,CADxB;AAEE,IAAA,IAAI,EAAC,MAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAME,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMG,UAAU,CAACD,OAAO,GAAG,CAAX,CAD3B;AAEE,IAAA,IAAI,EAAC,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAUE,oBAAC,MAAD;AACE,IAAA,OAAO,EAAE,MAAMG,MAAM,CAACD,GAAG,GAAG,CAAP,CADvB;AAEE,IAAA,IAAI,EAAC,KAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,EAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,EAeE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,MAAjB;AAAwB,IAAA,GAAG,EAAEJ,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EAgBE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,SAAjB;AAA2B,IAAA,GAAG,EAAEE,OAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,EAiBE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAC,KAAjB;AAAuB,IAAA,GAAG,EAAEE,GAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjBF,CADF;AAqBD,CAhCD;;AAkCAd,QAAQ,CAACiB,MAAT,CAAgB,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAAhB,EACEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CADF","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => {\n  console.log(props)\n  const { onClick, text } = props\n  return (\n    <button onClick={onClick}>\n      {text}\n      </button>\n  )\n}\n\nconst Statistics = (props) => {\n  console.log('Statistics props value is', props)\n  const { text, num } = props\n\n  return (\n    <div>\n      <p>{text} {num}</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  let sum = good + neutral + bad\n  {/*\n  let avg = (good + (bad * -1)) / (good + neutral + bad)\n  let pos = good / (good + neutral + bad) * 100\n   */}\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button\n        onClick={() => setGood(good + 1)}\n        text='good'\n      />\n      <Button\n        onClick={() => setNeutral(neutral + 1)}\n        text='neutral'\n      />\n      <Button\n        onClick={() => setBad(bad + 1)}\n        text='bad'\n      />\n      <h1>statistics</h1>\n      <Statistics text=\"good\" num={good} />\n      <Statistics text=\"neutral\" num={neutral} />\n      <Statistics text=\"bad\" num={bad} />\n    </div>\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}