{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Pasi\\\\Desktop\\\\Full Stack -websovelluskehitys\\\\osa1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pasi\\\\Desktop\\\\Full Stack -websovelluskehitys\\\\osa1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => {\n  console.log(props);\n  const onClick = props.onClick,\n        text = props.text;\n  return React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, text);\n};\n\nconst Statistics = props => {\n  console.log('Statistics props value is', props);\n  const text = props.text,\n        num = props.num,\n        sum = props.sum;\n\n  if (sum === 0) {\n    if (text === \"good\") {\n      return React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"No feedback given\"));\n    } else {\n      return React.createElement(React.Fragment, null);\n    }\n  } else {\n    return React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, text), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, num));\n  }\n};\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  let sum = good + neutral + bad;\n  let avg = (good + bad * -1) / (good + neutral + bad);\n  let pos = good / (good + neutral + bad) * 100;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"give feedback\"), React.createElement(Button, {\n    onClick: () => setGood(good + 1),\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setNeutral(neutral + 1),\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setBad(bad + 1),\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }), React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"statistics\"), React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(Statistics, {\n    text: \"good\",\n    num: good,\n    sum: sum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"neutral\",\n    num: neutral,\n    sum: sum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"bad\",\n    num: bad,\n    sum: sum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"all\",\n    num: sum,\n    sum: sum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"average\",\n    num: avg,\n    sum: sum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    text: \"positive\",\n    num: pos,\n    sum: sum,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  })));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Pasi/Desktop/Full Stack -websovelluskehitys/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","console","log","onClick","text","Statistics","num","sum","App","good","setGood","neutral","setNeutral","bad","setBad","avg","pos","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => {\n  console.log(props)\n  const { onClick, text } = props\n  return (\n    <button onClick={onClick}>\n      {text}\n      </button>\n  )\n}\n\nconst Statistics = (props) => {\n  console.log('Statistics props value is', props)\n  const { text, num, sum } = props\n\n  if(sum === 0) {\n    if(text === \"good\") {\n      return (\n        <tr>\n          <td>No feedback given</td>\n        </tr>\n      )\n    } else {\n      return(<></>)\n    }\n  } else {\n    return (\n      <tr>\n        <td>{text}</td><td>{num}</td>\n      </tr>\n    )\n  }\n\n}\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n  let sum = good + neutral + bad\n  let avg = (good + (bad * -1)) / (good + neutral + bad)\n  let pos = good / (good + neutral + bad) * 100\n\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button\n        onClick={() => setGood(good + 1)}\n        text='good'\n      />\n      <Button\n        onClick={() => setNeutral(neutral + 1)}\n        text='neutral'\n      />\n      <Button\n        onClick={() => setBad(bad + 1)}\n        text='bad'\n      />\n      <h1>statistics</h1>\n      <table>\n      <Statistics text=\"good\" num={good} sum={sum} />\n      <Statistics text=\"neutral\" num={neutral} sum={sum} />\n      <Statistics text=\"bad\" num={bad} sum={sum} />\n      <Statistics text=\"all\" num={sum} sum={sum} />\n      <Statistics text=\"average\" num={avg} sum={sum} />\n      <Statistics text=\"positive\" num={pos} sum={sum} />\n      </table>\n    </div>\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}