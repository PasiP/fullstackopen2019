{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\Pasi\\\\Desktop\\\\Full Stack -websovelluskehitys\\\\osa1\\\\unicafe\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Pasi\\\\Desktop\\\\Full Stack -websovelluskehitys\\\\osa1\\\\unicafe\\\\src\\\\index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Button = props => {\n  console.log(props);\n  const onClick = props.onClick,\n        text = props.text;\n  return React.createElement(\"button\", {\n    onClick: onClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, text);\n};\n\nconst Statistics = props => {\n  console.log(props);\n  let sum = 0;\n  let avg = 0;\n  let pos = 0;\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, \"statistics\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"good \", good), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, \"neutral \", neutral), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"bad \", bad), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"all \", good + neutral + bad), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"average \", (good + bad * -1) / (good + neutral + bad)), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"positive \", good / (good + neutral + bad), \" %\"));\n};\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const _useState = useState(0),\n        _useState2 = _slicedToArray(_useState, 2),\n        good = _useState2[0],\n        setGood = _useState2[1];\n\n  const _useState3 = useState(0),\n        _useState4 = _slicedToArray(_useState3, 2),\n        neutral = _useState4[0],\n        setNeutral = _useState4[1];\n\n  const _useState5 = useState(0),\n        _useState6 = _slicedToArray(_useState5, 2),\n        bad = _useState6[0],\n        setBad = _useState6[1];\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"give feedback\"), React.createElement(Button, {\n    onClick: () => setGood(good + 1),\n    text: \"good\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setNeutral(neutral + 1),\n    text: \"neutral\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(Button, {\n    onClick: () => setBad(bad + 1),\n    text: \"bad\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }), React.createElement(Statistics, {\n    good: good,\n    neutral: neutral,\n    bad: bad,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }));\n};\n\nReactDOM.render(React.createElement(App, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 59\n  },\n  __self: this\n}), document.getElementById('root'));","map":{"version":3,"sources":["C:/Users/Pasi/Desktop/Full Stack -websovelluskehitys/osa1/unicafe/src/index.js"],"names":["React","useState","ReactDOM","Button","props","console","log","onClick","text","Statistics","sum","avg","pos","good","neutral","bad","App","setGood","setNeutral","setBad","render","document","getElementById"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport ReactDOM from 'react-dom'\n\nconst Button = (props) => {\n  console.log(props)\n  const { onClick, text } = props\n  return (\n    <button onClick={onClick}>\n      {text}\n      </button>\n  )\n}\n\nconst Statistics = (props) => {\n  console.log(props)\n  let sum = 0\n  let avg = 0\n  let pos = 0\n\nreturn (\n    <div>\n      <h1>statistics</h1>\n      <p>good {good}</p>\n      <p>neutral {neutral}</p>\n      <p>bad {bad}</p>\n      <p>all {good + neutral + bad}</p>\n      <p>average {(good + (bad * -1)) / (good + neutral + bad)}</p>\n      <p>positive {good / (good + neutral + bad)} %</p>\n    </div>\n  )\n}\n\nconst App = () => {\n  // tallenna napit omaan tilaansa\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <Button\n        onClick={() => setGood(good + 1)}\n        text='good'\n      />\n      <Button\n        onClick={() => setNeutral(neutral + 1)}\n        text='neutral'\n      />\n      <Button\n        onClick={() => setBad(bad + 1)}\n        text='bad'\n      />\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n)\n"]},"metadata":{},"sourceType":"module"}